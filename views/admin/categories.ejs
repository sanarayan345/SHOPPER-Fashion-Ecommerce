
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Category Management</title>
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            padding: 0;
            background-color: #f4f4f4;
        }
        .sidebar {
            height: 100%;
            width: 260px;
            position: fixed;
            top: 20px;
            left: 10px;
            background-color: #D19C97;
            padding-top: 20px;
        }
        .sidebar a {
            padding: 15px 25px;
            text-decoration: none;
            font-size: 18px;
            color: #333;
            display: block;
        }
        .sidebar a:hover {
        
             color:#fff;
             text-decoration: underline;
        }
        
        .content {
            margin-left: 260px;
            padding: 0px;
        }
        .header {
            background-color: #D19C97;
            padding: 10px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            display: flex;
             justify-content: space-between; 
            align-items: center;
            width: 102%;
            top:20px;
            
        }
        .header h2 {
            color:#333;
            margin: 0;
        }
        .header .logout {
            color: #333;
            text-decoration: none;
        }
        .card {
            background-color: #fff;
            padding: 20px;
            margin: 20px 0;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        h3{
  text-align: center;
   margin-top: 0px; 
  color:#333;
}

       
        .footer {
            background-color:#D19C97;
            
            text-align: left;
            padding: 10px 0;
            position: fixed;
            width: 100%;
            bottom: 0;
        }
                 
        .footer a {
        color: #333;
        text-decoration: none;
        margin: 0 15px;
    }
    .footer a:hover {
        text-decoration: underline;
    }
        
        .chart-container {
            display: flex;
            justify-content: space-between;
        }
        .chart {
            width: 45%;
        }
        canvas {
            background-color: #fff;
        }


        h1 {
  text-align: center;
  margin-top: 20px;
  color:#333;
}

form {
  width: 100%;
  margin: 20px auto;
  padding: 10px;
  /* background-color: #fff; */
  border: 1px solid #ddd;
  border-radius: 4px;
  margin-bottom: 20px;
}
 form input{
  width: 100%; 
  padding: 10px;
  margin-bottom:  10px ;
   display :block; 
  
  box-sizing: border-box;
 }


 button {
  
  padding: 5px ;
  margin: 5px 0; 
  background-color: #28a745;
  color: #fff;
  border: none;
  cursor: pointer;
  margin-left: 10px;
}

 button:hover {
  background-color: #28a745;
}
button.btn-edit {
  background-color: #28a745;
}
  button.btn-delete {
    background-color: #dc3545;
    
    color: white;
  
  border:none;

  
  
}

table {
  width: 100%;
  margin: 20px auto;
  border-collapse: collapse;
}

table, th, td {
  border: 1px solid #ccc;
  padding: 10px;
}

th, td {
  padding: 10px;
  text-align: left;
}

th {
  background-color: #f8f8f8;
}

.btn {
  padding: 5px 10px;
  border: none;
  cursor: pointer;
}



.btn-edit {
  background-color: #ffc107;
  color: #fff;
}

.btn-edit:hover {
  background-color: #e0a800;
}

.btn-delete:hover{
  background-color: #e0a800;
}


    </style>
</head>
<body>

    <div class="sidebar">
        <a href="./dashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a>
        <a href="./orders"><i class="fas fa-box"></i> Orders</a>
        <a href="./products"><i class="fas fa-tag"></i> Products</a>
        <a href="./customers"><i class="fas fa-users"></i> Customers</a>
        <a href="./categories"><i class="fas fa-list"></i> Categories</a>
        <a href="#"><i class="fas fa-ticket-alt"></i> Coupons</a>
        <a href="#"><i class="fas fa-chart-line"></i> Sales Report</a>
        <a href="#"><i class="fas fa-wallet"></i> Wallet</a>
    </div>

    <div class="content">
        <div class="header">
            <h2>SHOPPER</h2>
            <a href="./logout" class="logout">Logout</a>
        </div>
  

        <h3>Category Management</h3>

        <form id="categoryForm" action="/admin/categories/add" method="POST">
          <h6>Category Name</h6>
          <input type="text" id="categoryName" name="name" placeholder="Category Name" required><br>
          <h6>Description</h6>
           <input type="text" id="categoryDescription" name="description" placeholder="Description" required><br>
          <!-- <h6>Offers</h6> 
          <input type="text" name="offer" placeholder="Offer" required><br> -->
          <button type="submit">Add Category</button>
        </form>
        
        <h3>Categories</h3>
        <table id="categoriesList">
          <thead>
            <tr>
              <th>Name</th>
              <th>Description</th>
              
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% categories.forEach(category => { %>
              <tr id="category-<%= category._id %>">
                <td><%= category.name %></td>
                <td><%= category.description %></td>
                
                <td>
                  <button class="btn btn-edit" onclick="openEditModal('<%= category._id %>', '<%= category.name %>', '<%= category.description %>')">Edit</button>
                  <button class="btn btn-delete" onclick="confirmDelete('<%= category._id %>')">Delete</button>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
        
        <!-- Edit Modal -->
        <div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <form id="editCategoryForm">
                  <input type="hidden" id="editCategoryId">
                  <div class="form-group">
                    <label for="editCategoryName" class="form-label">Category Name</label>
                    <input type="text" class="form-control" id="editCategoryName" required>
                  </div>
                  <div class="form-group">
                    <label for="editCategoryDescription" class="form-label">Description</label>
                    <input type="text" class="form-control" id="editCategoryDescription" required>
                  </div>
                  <!-- <div class="form-group">
                    <label for="editCategoryOffer" class="form-label">Offer</label>
                    <input type="number" class="form-control" id="editCategoryOffer" required>
                  </div> -->
                  <button type="submit" class="btn btn-primary">Save changes</button>
                </form>
              </div>
            </div>
          </div>
        </div>
    </div>
        <script>

 function validateCategory(name, description) {
   if (name.length < 2 || name.length > 50) {
     Swal.fire({
       icon: 'error',
       title: 'Invalid Category Name',
       text: 'Category name must be between 2 and 50 characters long.'
    });
     return false;
   }
  
   if (!/^[a-zA-Z0-9\s-]+$/.test(name)) {
     Swal.fire({
       icon: 'error',
      title: 'Invalid Category Name',
       text: 'Category name can only contain letters, numbers, spaces, and hyphens.'
     });
     return false;
  }
  
   if (description.length < 10 || description.length > 200) {
    Swal.fire({
       icon: 'error',
      title: 'Invalid Description',
      text: 'Description must be between 10 and 200 characters long.'
     });
     return false;
   }
  
   return true;
 }



        document.getElementById('categoryForm').addEventListener('submit', function(event) {
          event.preventDefault();
          //  const formData = new FormData(this);
          //  const formObject = {};
        
          //  formData.forEach((value, key) => {
          //    formObject[key] = value;
          //  });


          const name = document.getElementById('categoryName').value.trim();
  const description = document.getElementById('categoryDescription').value.trim();
  
  if (!validateCategory(name, description)) {
    return;
  }
        
          fetch('/admin/categories/add', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name, description })
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
                  Swal.fire({
                        icon:'success',
                        title: 'Success',
                        text:data.message
            });
              
                const newCategory = data.category;
                const newRow = `<tr id="category-${newCategory._id}">
                  <td>${newCategory.name}</td>
                  <td>${newCategory.description}</td>
      
                  <td>
                    <button class="btn btn-edit" onclick="openEditModal('${newCategory._id}', '${newCategory.name}', '${newCategory.description}')">Edit</button>
                    <button class="btn btn-delete" onclick="confirmDelete('${newCategory._id}')">Delete</button>
                  </td>
                </tr>`;
                document.getElementById('categoriesList').insertAdjacentHTML('beforeend', newRow);
                this.reset();
              } else{
                Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.message
              });
            }
          })
          .catch(error => {
            console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occured while Adding the category'
        });
          });
        });
        </script>
        <script>
        
        function openEditModal(id, name, description) {
          document.getElementById('editCategoryId').value = id;
          document.getElementById('editCategoryName').value = name;
          document.getElementById('editCategoryDescription').value = description;
    
          $('#editCategoryModal').modal('show');
        }
        
        document.getElementById('editCategoryForm').addEventListener('submit', function(event) {
          event.preventDefault();
          const id = document.getElementById('editCategoryId').value;
          const name = document.getElementById('editCategoryName').value.trim();
          const description = document.getElementById('editCategoryDescription').value.trim();
          
          if (!validateCategory(name, description)) {
    return;
  }
          fetch(`/admin/categories/${id}/update`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name, description})
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {  
              Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: data.message
                });
                // Update the DOM directly
                document.querySelector(`#category-${id} td:nth-child(1)`).textContent = newName;
                document.querySelector(`#category-${id} td:nth-child(2)`).textContent = newDescription;
                
                $('#editCategoryModal').modal('hide');
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Your Category Updated Successfully'
            })
        });
    
      });

        </script>
             <script>
        //  delete category

        function confirmDelete(categoryId) {
          Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
          }).then((result) => {
            if (result.isConfirmed) {
              fetch(`/admin/categories/${categoryId}/delete`, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                }
              })
              .then(response => response.json())
              .then(data => {
                if (data.success) {
                  Swal.fire({
                    icon: 'success',
                    title:'Deleted!',  
                   text: 'Your category has been deleted.'
                });
                  
                } else {
                  Swal.fire({
                    icon: 'success',
                    title:'Deleted!',  
                   text: 'Your category has been deleted.'

                });

                  document.getElementById(`category-${categoryId}`).remove();

                }
              })
              .catch(error => {
                Swal.fire({  
                icon: 'success',
                    title:'Deleted!',  
                   text: 'Your category has been deleted.'
              });
              });
            }
          });
        }
        </script>
        
<!--        
      footer
    <footer>
        <div class="footer">
            <a href="#">Policies</a>
            <a href="#">Return Policies</a>
            <a href="#">Terms of Use</a>
            <a href="#">Security</a>
            <a href="#">Privacy</a>
            <a href="#">CopyRight Policy</a>
        </div>
     -->
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

        </footer> 
    </body>
    </html>

